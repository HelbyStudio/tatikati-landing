---
import { useTranslations } from '../i18n/utils.js';

interface Props {
  title?: string;
  description?: string;
  variant?: 'footer' | 'blog' | 'inline';
  maxWidth?: string;
  locale: 'fr' | 'en';
}

const {
  title,
  description,
  variant = 'footer',
  maxWidth = '500px',
  locale = 'fr'
} = Astro.props;

const t = useTranslations(locale);

// Use translations as default values if not provided
const finalTitle = title || t('newsletter.title');
const finalDescription = description || t('newsletter.description');
---

<div class={`newsletter-form-section ${variant}`}>
  <div class="newsletter-form-content">
    <div class="newsletter-form-text">
      <h3 class="newsletter-form-title">{finalTitle}</h3>
      <p class="newsletter-form-description">{finalDescription}</p>
    </div>
    
    <form class="newsletter-form-widget" data-newsletter-form>
      <div class="newsletter-form-group">
        <label for={`newsletter-email-${variant}`} class="sr-only">{t('newsletter.placeholder')}</label>
        <input 
          type="email" 
          id={`newsletter-email-${variant}`}
          name="email"
          placeholder={t('newsletter.placeholder')}
          class="newsletter-form-input"
          required
          aria-describedby={`email-error-${variant}`}
        />
        <button 
          type="submit" 
          class="newsletter-form-submit" 
          data-subscribe-text={t('newsletter.subscribe')}
          data-loading-text={t('newsletter.loading')}
          data-success-text={t('newsletter.success')}
          data-locale={locale}
        >
          <span>{t('newsletter.subscribe')}</span>
          {variant === 'footer' && <i class="fa-solid fa-arrow-right" aria-hidden="true"></i>}
        </button>
      </div>
      <div 
        id={`email-error-${variant}`} 
        class="newsletter-form-error" 
        role="alert" 
        aria-live="polite"
        data-error-required={t('newsletter.emailRequired')}
        data-error-invalid={t('newsletter.emailInvalid')}
        data-error-general={t('newsletter.error')}
      ></div>
      {variant === 'footer' && (
        <p class="newsletter-form-privacy">
          {t('newsletter.privacyText')} 
          <a href={locale === 'fr' ? '/privacy' : '/en/privacy'}>{t('newsletter.privacyLink')}</a>
        </p>
      )}
    </form>
  </div>
</div>

<style define:vars={{ maxWidth }}>
  .newsletter-form-section {
    width: 100%;
  }

  .newsletter-form-content {
    display: grid;
    gap: var(--space-2xl);
    align-items: center;
  }

  /* Footer variant */
  .newsletter-form-section.footer .newsletter-form-content {
    grid-template-columns: 1fr;
    text-align: left;
  }

  /* Blog variant */
  .newsletter-form-section.blog .newsletter-form-content {
    text-align: center;
    max-width: 600px;
    margin: 0 auto;
  }

  /* Inline variant */
  .newsletter-form-section.inline .newsletter-form-content {
    text-align: left;
    max-width: var(--maxWidth);
  }

  .newsletter-form-title {
    font-family: var(--font-heading);
    font-size: clamp(1.5rem, 3vw, 2.25rem);
    font-weight: 700;
    margin-bottom: var(--space-sm);
    color: currentColor;
  }

  .newsletter-form-section.blog .newsletter-form-title {
    font-size: 1.75rem;
  }

  .newsletter-form-description {
    font-size: 1.1rem;
    line-height: 1.6;
    color: currentColor;
    opacity: 0.9;
  }

  .newsletter-form-widget {
    width: 100%;
  }

  .newsletter-form-group {
    display: flex;
    gap: 0;
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: var(--shadow-soft);
  }

  .newsletter-form-section.footer .newsletter-form-group {
    max-width: 500px;
    margin: 0;
  }

  .newsletter-form-section.blog .newsletter-form-group {
    max-width: 400px;
    margin: 0 auto;
  }

  .newsletter-form-section.inline .newsletter-form-group {
    max-width: var(--maxWidth);
    margin: 0;
  }

  .newsletter-form-input {
    flex: 1;
    padding: var(--space-lg);
    border: none;
    background: white;
    font-size: 1rem;
    color: var(--color-fg);
  }

  .newsletter-form-input:focus {
    outline: none;
    box-shadow: inset 0 0 0 2px var(--color-accent-2);
  }

  .newsletter-form-input::placeholder {
    color: var(--color-gray-500);
  }

  .newsletter-form-submit {
    padding: var(--space-lg) var(--space-xl);
    background: var(--color-accent-2);
    color: white;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    font-weight: 600;
    transition: background 0.2s ease;
  }

  .newsletter-form-submit:hover {
    background: var(--color-accent-1);
  }

  .newsletter-form-submit i {
    font-size: 16px;
    margin-left: var(--space-sm);
  }

  .newsletter-form-privacy {
    margin-top: var(--space-md);
    font-size: 0.85rem;
    color: currentColor;
    opacity: 0.8;
  }

  .newsletter-form-privacy a {
    color: currentColor;
    text-decoration: underline;
    opacity: 0.9;
  }

  .newsletter-form-error {
    margin-top: var(--space-sm);
    color: #ffcccb;
    font-size: 0.9rem;
    display: none;
  }

  /* Responsive Design */
  @media (min-width: 768px) {
    .newsletter-form-section.footer .newsletter-form-content {
      grid-template-columns: 1fr 1fr;
      text-align: left;
      align-items: start;
      justify-items: start;
      gap: var(--space-3xl);
    }

    .newsletter-form-section.footer .newsletter-form-group {
      max-width: 450px;
      margin: 0;
    }
  }

  @media (max-width: 767px) {
    .newsletter-form-section.footer .newsletter-form-content,
    .newsletter-form-section.blog .newsletter-form-content {
      text-align: center;
    }
    
    .newsletter-form-section.footer .newsletter-form-group,
    .newsletter-form-section.blog .newsletter-form-group {
      margin: 0 auto;
    }

    .newsletter-form-group {
      flex-direction: column;
    }

    .newsletter-form-submit {
      justify-content: center;
    }
  }

  /* Screen Reader Only */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
</style>

<script>
  import { initNewsletterHandler } from '../scripts/newsletterHandler.js';
  
  document.addEventListener('DOMContentLoaded', function() {
    initNewsletterHandler('[data-newsletter-form]');
  });
</script>