---
import { podcasts } from '../data/podcasts.ts';

interface Props {
  title?: string;
  subtitle?: string;
  showAll?: boolean;
}

const {
  title = "Découvrez nos podcasts",
  subtitle = "Des contenus soigneusement sélectionnés pour éveiller la curiosité",
  showAll = true
} = Astro.props;

const displayPodcasts = showAll ? podcasts : podcasts.slice(0, 8);
---

<section class="podcasts" id="podcasts">
  <div class="container">
    <!-- Section Header -->
    <div class="podcasts-header">
      <h2 class="section-title">{title}</h2>
      <p class="section-subtitle">{subtitle}</p>
      
      <div class="podcasts-controls">
        <button class="control-btn control-prev" aria-label="Podcasts précédents">
          <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
            <path d="M12 16L6 10L12 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
        <button class="control-btn control-next" aria-label="Podcasts suivants">
          <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
            <path d="M8 4L14 10L8 16" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>
    </div>

    <!-- Podcast Scroller -->
    <div class="podcast-scroller-container">
      <div 
        class="podcast-scroller" 
        data-podcast-scroller
        role="region"
        aria-label="Liste des podcasts"
      >
        <div class="podcast-track" data-podcast-track>
          {displayPodcasts.map((podcast, index) => (
            <div 
              class="podcast-card" 
              data-podcast-id={podcast.id}
              data-podcast-index={index}
              tabindex="0"
              role="button"
              aria-label={`Écouter ${podcast.title}`}
            >
              <div class="podcast-cover">
                <img 
                  src={podcast.cover}
                  alt={`Couverture de ${podcast.title}`}
                  loading="lazy"
                  width="200"
                  height="200"
                />
                <div class="play-overlay">
                  <div class="play-button">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M8 5v14l11-7z"/>
                    </svg>
                  </div>
                </div>
              </div>
              
              <div class="podcast-info">
                <h3 class="podcast-title">{podcast.title}</h3>
                {podcast.description && (
                  <p class="podcast-description">{podcast.description}</p>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Scroll Indicators -->
      <div class="scroll-indicators" data-scroll-indicators>
        {displayPodcasts.map((_, index) => (
          <button 
            class={`indicator ${index === 0 ? 'active' : ''}`}
            data-indicator-index={index}
            aria-label={`Aller au podcast ${index + 1}`}
          ></button>
        ))}
      </div>
    </div>

    <!-- Featured Podcast Player -->
    <div class="featured-player" data-featured-player style="display: none;">
      <div class="featured-content">
        <div class="featured-info">
          <h3 class="featured-title" data-featured-title></h3>
          <p class="featured-description" data-featured-description></p>
        </div>
        
        <div class="featured-audio">
          <div class="audio-placeholder" data-audio-placeholder>
            <div class="audio-embed" data-audio-embed></div>
          </div>
        </div>
        
        <button class="close-player" data-close-player aria-label="Fermer le lecteur">
          <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
            <path d="M15 5L5 15M5 5L15 15" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </button>
      </div>
    </div>
  </div>
</section>

<style>
  .podcasts {
    padding: var(--space-4xl) 0;
    background: var(--color-bg);
    position: relative;
  }

  .podcasts-header {
    text-align: center;
    margin-bottom: var(--space-3xl);
    position: relative;
  }

  .section-title {
    font-family: var(--font-heading);
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 700;
    color: var(--color-fg);
    margin-bottom: var(--space-lg);
  }

  .section-subtitle {
    font-size: clamp(1.1rem, 2vw, 1.25rem);
    color: var(--color-gray-600);
    line-height: 1.6;
    max-width: 600px;
    margin: 0 auto;
  }

  .podcasts-controls {
    position: absolute;
    top: 0;
    right: 0;
    display: flex;
    gap: var(--space-sm);
  }

  .control-btn {
    width: 44px;
    height: 44px;
    border: 1px solid var(--color-gray-300);
    background: white;
    border-radius: var(--radius-full);
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
    color: var(--color-gray-600);
  }

  .control-btn:hover {
    background: var(--color-accent-1);
    color: white;
    border-color: var(--color-accent-1);
    transform: scale(1.05);
  }

  .control-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }

  .control-btn:disabled:hover {
    background: white;
    color: var(--color-gray-600);
    border-color: var(--color-gray-300);
  }

  /* Podcast Scroller */
  .podcast-scroller-container {
    position: relative;
  }

  .podcast-scroller {
    overflow: hidden;
    border-radius: var(--radius-lg);
    margin-bottom: var(--space-xl);
  }

  .podcast-track {
    display: flex;
    gap: var(--space-lg);
    transition: transform 0.5s ease;
    padding: var(--space-sm);
  }

  .podcast-card {
    flex: 0 0 280px;
    background: white;
    border-radius: var(--radius-xl);
    box-shadow: var(--shadow-card);
    overflow: hidden;
    cursor: pointer;
    transition: all 0.3s ease;
    border: 1px solid var(--color-gray-200);
  }

  .podcast-card:hover {
    transform: translateY(-8px);
    box-shadow: var(--shadow-hover);
    border-color: var(--color-accent-1);
  }

  .podcast-card:focus {
    outline: 2px solid var(--color-accent-1);
    outline-offset: 2px;
  }

  .podcast-cover {
    position: relative;
    aspect-ratio: 1;
    overflow: hidden;
  }

  .podcast-cover img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .podcast-card:hover .podcast-cover img {
    transform: scale(1.05);
  }

  .play-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.3);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .podcast-card:hover .play-overlay {
    opacity: 1;
  }

  .play-button {
    width: 60px;
    height: 60px;
    background: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--color-accent-1);
    transform: scale(0.8);
    transition: transform 0.3s ease;
  }

  .podcast-card:hover .play-button {
    transform: scale(1);
  }

  .podcast-info {
    padding: var(--space-lg);
  }

  .podcast-title {
    font-family: var(--font-heading);
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--color-fg);
    margin-bottom: var(--space-sm);
    line-height: 1.3;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .podcast-description {
    font-size: 0.9rem;
    color: var(--color-gray-600);
    line-height: 1.4;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Scroll Indicators */
  .scroll-indicators {
    display: flex;
    justify-content: center;
    gap: var(--space-sm);
    margin-top: var(--space-xl);
  }

  .indicator {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    border: none;
    background: var(--color-gray-300);
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .indicator.active {
    background: var(--color-accent-1);
    transform: scale(1.2);
  }

  .indicator:hover {
    background: var(--color-accent-1);
  }

  /* Featured Player */
  .featured-player {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    z-index: 1000;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--space-lg);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .featured-player.active {
    opacity: 1;
    visibility: visible;
  }

  .featured-content {
    background: white;
    border-radius: var(--radius-2xl);
    padding: var(--space-2xl);
    max-width: 600px;
    width: 100%;
    max-height: 80vh;
    overflow-y: auto;
    position: relative;
    transform: scale(0.9);
    transition: transform 0.3s ease;
  }

  .featured-player.active .featured-content {
    transform: scale(1);
  }

  .close-player {
    position: absolute;
    top: var(--space-lg);
    right: var(--space-lg);
    width: 40px;
    height: 40px;
    border: none;
    background: var(--color-gray-100);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background 0.2s ease;
  }

  .close-player:hover {
    background: var(--color-gray-200);
  }

  .featured-title {
    font-family: var(--font-heading);
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--color-fg);
    margin-bottom: var(--space-sm);
  }

  .featured-description {
    color: var(--color-gray-600);
    line-height: 1.6;
    margin-bottom: var(--space-xl);
  }

  .audio-placeholder {
    background: var(--color-gray-50);
    border-radius: var(--radius-lg);
    padding: var(--space-xl);
    text-align: center;
    border: 2px dashed var(--color-gray-300);
  }

  .audio-embed {
    min-height: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--color-gray-500);
    font-style: italic;
  }

  /* Responsive Design */
  @media (max-width: 767px) {
    .podcasts-controls {
      position: static;
      justify-content: center;
      margin-top: var(--space-lg);
    }

    .podcast-card {
      flex: 0 0 260px;
    }

    .featured-content {
      margin: var(--space-lg);
      padding: var(--space-xl);
    }
  }

  /* Dark Mode */
  @media (prefers-color-scheme: dark) {
    .podcast-card {
      background: var(--color-gray-900);
      border-color: var(--color-gray-800);
    }

    .control-btn {
      background: var(--color-gray-800);
      border-color: var(--color-gray-700);
      color: var(--color-gray-300);
    }

    .control-btn:disabled {
      background: var(--color-gray-800);
      color: var(--color-gray-600);
      border-color: var(--color-gray-700);
    }

    .featured-content {
      background: var(--color-gray-900);
    }

    .close-player {
      background: var(--color-gray-800);
    }

    .close-player:hover {
      background: var(--color-gray-700);
    }

    .audio-placeholder {
      background: var(--color-gray-800);
      border-color: var(--color-gray-700);
    }
  }

  /* Reduced Motion */
  @media (prefers-reduced-motion: reduce) {
    .podcast-track {
      transition: none;
    }

    .podcast-card {
      transition: none;
    }

    .podcast-card:hover {
      transform: none;
    }

    .podcast-card:hover .podcast-cover img {
      transform: none;
    }

    .featured-player {
      transition: none;
    }

    .featured-content {
      transition: none;
      transform: none;
    }

    .featured-player.active .featured-content {
      transform: none;
    }
  }
</style>